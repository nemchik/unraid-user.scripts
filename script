#!/usr/bin/env bash
set -euo pipefail
IFS=$'\n\t'

# THIS IS A WORK IN PROGRESS

touch ./preferences.env
# shellcheck source=/dev/null
source ./preferences.env

# Cleanup Function
cleanup() {
    local -ri EXIT_CODE=$?

    if [[ ${EXIT_CODE} -ne 0 ]]; then
        echo "script did not finish running successfully."
    fi

    echo "Exiting."

    exit ${EXIT_CODE}
    trap - ERR EXIT SIGABRT SIGALRM SIGHUP SIGINT SIGQUIT SIGTERM
}
trap 'cleanup' ERR EXIT SIGABRT SIGALRM SIGHUP SIGINT SIGQUIT SIGTERM

# Log Functions
log() { echo -e "<span class=''>$(date +"%F %T") [LOG] $*</span>"; }
login() { echo -e "<span class='login'>$(date +"%F %T") [LOGIN] $*</span>"; }
array() { echo -e "<span class='array'>$(date +"%F %T") [ARRAY] $*</span>"; }
system() { echo -e "<span class='system'>$(date +"%F %T") [SYSTEM] $*</span>"; }
warn() { echo -e "<span class='warn'>$(date +"%F %T") [WARN] $*</span>"; }
error() { echo -e "<span class='error'>$(date +"%F %T") [ERROR] $*</span>"; }

update_check() {
    log "Checking for script updates."
    local REPO
    REPO="https://github.com/nemchik/unraid-user.scripts"
    local BRANCH
    BRANCH=$(git branch --show-current)

    git fetch origin "${BRANCH}" -q

    local LOCAL_COMMIT
    LOCAL_COMMIT=$(git rev-parse @)
    local LOCAL_DIFF
    LOCAL_DIFF=$(git diff)
    local REMOTE_BRANCH
    REMOTE_BRANCH=$(git rev-parse --abbrev-ref --symbolic-full-name '@{u}')
    local REMOTE_DIFF
    REMOTE_DIFF=$(git diff "${LOCAL_COMMIT}" "${REMOTE_BRANCH}")

    if [ "${LOCAL_DIFF}" != "" ]; then
        error "Your local files have changes that may conflict with performing an update. Please resolve this manually."
    elif [ "${REMOTE_DIFF}" != "" ]; then
        warn "New changes are available for ${BRANCH} script."
        warn "Review the changes:"
        warn "${REPO%/}/compare/${LOCAL_COMMIT}...${BRANCH}"
        warn "Update using:"
        warn "git -C /boot/config/plugins/user.scripts/scripts/${BRANCH} pull"
    else
        system "${BRANCH} script is up to date."
    fi
}

template() {
    local PARAMETER=${1:-}

    log "${PARAMETER}"
    echo
}

main() {
    update_check

    template "template function test"

    log "log test"
    login "login test"
    array "array test"
    system "system test"
    warn "warn test"
    error "error test"
}
main
